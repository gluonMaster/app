# Generated by Django 4.2.7 on 2025-08-19 17:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contracts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("clients", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Gruppenname")),
                (
                    "group_type",
                    models.CharField(
                        choices=[
                            ("group", "Gruppenunterricht"),
                            ("individual", "Einzelunterricht"),
                            ("nachhilfe", "Nachhilfe"),
                        ],
                        default="group",
                        max_length=15,
                        verbose_name="Gruppentyp",
                    ),
                ),
                (
                    "level",
                    models.CharField(blank=True, max_length=50, verbose_name="Niveau"),
                ),
                (
                    "min_age",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Mindestalter"
                    ),
                ),
                (
                    "max_age",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Hoechstalter"
                    ),
                ),
                (
                    "max_students",
                    models.IntegerField(
                        default=12, verbose_name="Maximale Teilnehmerzahl"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                ("notes", models.TextField(blank=True, verbose_name="Notizen")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Aktualisiert am"),
                ),
            ],
            options={
                "verbose_name": "Gruppe",
                "verbose_name_plural": "Gruppen",
                "ordering": ["subject__name", "name"],
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Fachname")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Beschreibung"),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Fachcode"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "default_duration",
                    models.IntegerField(
                        default=45, verbose_name="Standard Dauer (Minuten)"
                    ),
                ),
                (
                    "min_age",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Mindestalter"
                    ),
                ),
                (
                    "max_age",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Hoechstalter"
                    ),
                ),
                (
                    "required_materials",
                    models.TextField(
                        blank=True, verbose_name="Erforderliche Materialien"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Aktualisiert am"),
                ),
            ],
            options={
                "verbose_name": "Fach",
                "verbose_name_plural": "Faecher",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TrialLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheduled_date", models.DateTimeField(verbose_name="Geplante Zeit")),
                (
                    "actual_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tatsaechliche Zeit"
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(default=45, verbose_name="Dauer (Minuten)"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Geplant"),
                            ("completed", "Durchgefuehrt"),
                            ("cancelled", "Abgesagt"),
                            ("no_show", "Nicht erschienen"),
                        ],
                        default="scheduled",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "teacher_feedback",
                    models.TextField(blank=True, verbose_name="Lehrerrueckmeldung"),
                ),
                (
                    "recommended_level",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Empfohlenes Niveau"
                    ),
                ),
                (
                    "enrolled_after_trial",
                    models.BooleanField(
                        default=False, verbose_name="Nach Probestunde angemeldet"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notizen")),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clients.child",
                        verbose_name="Kind",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_trials",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Erstellt von",
                    ),
                ),
                (
                    "recommended_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="lessons.group",
                        verbose_name="Empfohlene Gruppe",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lessons.subject",
                        verbose_name="Fach",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="taught_trials",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Lehrer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Probestunde",
                "verbose_name_plural": "Probestunden",
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.IntegerField(
                        choices=[
                            (0, "Montag"),
                            (1, "Dienstag"),
                            (2, "Mittwoch"),
                            (3, "Donnerstag"),
                            (4, "Freitag"),
                            (5, "Samstag"),
                            (6, "Sonntag"),
                        ],
                        verbose_name="Wochentag",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="Startzeit")),
                ("duration", models.IntegerField(verbose_name="Dauer (Minuten)")),
                ("valid_from", models.DateField(verbose_name="Gueltig ab")),
                (
                    "valid_to",
                    models.DateField(blank=True, null=True, verbose_name="Gueltig bis"),
                ),
                (
                    "classroom",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Klassenraum"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notizen")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="lessons.group",
                        verbose_name="Gruppe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stundenplan",
                "verbose_name_plural": "Stundenplaene",
                "ordering": ["weekday", "start_time"],
            },
        ),
        migrations.AddField(
            model_name="group",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="lessons.subject",
                verbose_name="Fach",
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="teachers",
            field=models.ManyToManyField(
                limit_choices_to={"userprofile__role": "teacher"},
                to=settings.AUTH_USER_MODEL,
                verbose_name="Lehrer",
            ),
        ),
        migrations.CreateModel(
            name="ActualLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheduled_date", models.DateTimeField(verbose_name="Geplante Zeit")),
                (
                    "actual_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tatsaechliche Zeit"
                    ),
                ),
                ("duration", models.IntegerField(verbose_name="Dauer (Minuten)")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Geplant"),
                            ("conducted", "Durchgefuehrt"),
                            ("cancelled", "Abgesagt"),
                            ("rescheduled", "Verschoben"),
                        ],
                        default="scheduled",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "lesson_content",
                    models.TextField(blank=True, verbose_name="Unterrichtsinhalt"),
                ),
                (
                    "homework_assigned",
                    models.TextField(blank=True, verbose_name="Hausaufgaben"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notizen")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Aktualisiert am"),
                ),
                (
                    "actual_teacher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="conducted_lessons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Tatsaechlicher Lehrer",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lessons.group",
                        verbose_name="Gruppe",
                    ),
                ),
                (
                    "scheduled_teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="scheduled_lessons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Geplanter Lehrer",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_lessons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Aktualisiert von",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tatsaechlicher Unterricht",
                "verbose_name_plural": "Tatsaechlicher Unterricht",
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.CreateModel(
            name="AbsenceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lesson_date", models.DateTimeField(verbose_name="Unterrichtsdatum")),
                (
                    "absence_type",
                    models.CharField(
                        choices=[
                            ("present", "Anwesend"),
                            ("absent", "Abwesend"),
                            ("late", "Verspaetet"),
                            ("excused", "Entschuldigt"),
                        ],
                        max_length=15,
                        verbose_name="Art der Abwesenheit",
                    ),
                ),
                (
                    "excuse_provided",
                    models.BooleanField(
                        default=False, verbose_name="Entschuldigung vorgelegt"
                    ),
                ),
                (
                    "excuse_reason",
                    models.TextField(blank=True, verbose_name="Entschuldigungsgrund"),
                ),
                (
                    "parent_notified",
                    models.BooleanField(
                        default=False, verbose_name="Eltern benachrichtigt"
                    ),
                ),
                (
                    "notification_sent_at",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Benachrichtigung gesendet am",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="absence_history",
                        to="clients.child",
                        verbose_name="Kind",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lessons.group",
                        verbose_name="Gruppe",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lessons.subject",
                        verbose_name="Fach",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fehlzeitenhistorie",
                "verbose_name_plural": "Fehlzeitenhistorien",
                "ordering": ["-lesson_date"],
            },
        ),
        migrations.CreateModel(
            name="GroupEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Aktiv"),
                            ("suspended", "Ausgesetzt"),
                            ("completed", "Abgeschlossen"),
                            ("transferred", "In andere Gruppe uebertragen"),
                        ],
                        default="active",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                ("enrollment_date", models.DateField(verbose_name="Anmeldedatum")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="Enddatum"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notizen")),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clients.child",
                        verbose_name="Kind",
                    ),
                ),
                (
                    "contract_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contracts.contractitem",
                        verbose_name="Vertragsposition",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lessons.group",
                        verbose_name="Gruppe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gruppenanmeldung",
                "verbose_name_plural": "Gruppenanmeldungen",
                "unique_together": {("child", "group", "contract_item")},
            },
        ),
        migrations.CreateModel(
            name="AttendanceRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "Anwesend"),
                            ("absent", "Abwesend"),
                            ("late", "Verspaetet"),
                            ("excused", "Entschuldigt"),
                        ],
                        max_length=15,
                        verbose_name="Anwesenheitsstatus",
                    ),
                ),
                (
                    "arrival_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Ankunftszeit"
                    ),
                ),
                (
                    "departure_time",
                    models.TimeField(blank=True, null=True, verbose_name="Abgangszeit"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notizen")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clients.child",
                        verbose_name="Kind",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_records",
                        to="lessons.actuallesson",
                        verbose_name="Unterricht",
                    ),
                ),
                (
                    "marked_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Markiert von",
                    ),
                ),
            ],
            options={
                "verbose_name": "Anwesenheitsrekord",
                "verbose_name_plural": "Anwesenheitsrekorde",
                "unique_together": {("lesson", "child")},
            },
        ),
    ]
